1 вариант 
	web-сервер с определённой периодичностью(5-10 раз в секунду) опрашивает устройства GET-запросами вида
	web-сервер POST запросами меняет состояния устройств
2 вариант
	web-сервер опрашивает устройства по необходимости
	устройства сами шлют состояние, если оно изменилось

варианты протокола
1. запросы GET - всегда означают чтения состояния устройства, POST - команда устройству сделать что-либо, команда - в параметрах POST
	МК на GET отвечает JSON-ом со своим состянием, на POST - JSON-ом с информацией об успехе/ошибке

	1) web-сервер опрашивает датчики GET-запросами вида:
		GET / HTTP/1.1                          // получить статус двери
		HOST: 127.0.0.1:8082                    // адрес МК двери
		Connection: keep-alive
		Pragma: no-cache
		Cache-Control: no-cache
		Accept: application/json, text/javascript, */*; q=0.01
		Origin: http://127.0.0.1:8081           // Адрес web-сервера
		<...  не особоважные детали заголовка  ...>

		<... тело пустое ...>
	ответ от МК:

		HTTP/1.1 200 OK                                          // коды ошибок - по стандарту http,
		Access-Control-Allow-Origin: http://127.0.0.1:8081       // тоже не особо важно, даже если потеряется пакет, 
		Content-Type: application/json                           // web-сервер вам разберётся, что делать
		Content-Length: %d                                       // длина тела

		{"id" : "1", "ip": "127.0.0.1", "state": "closed"}

	2) если что-то нужно сделать, web-сервер отправляет POST:

		POST / HTTP/1.1
		Host: 127.0.0.1:8082
		<... не особо важные детали загаловка ...>

		action=open                                              // открыть дверь

	ответ от МК:

		HTTP/1.1 200 OK                                          // коды ошибок - по стандарту http,
		Access-Control-Allow-Origin: http://127.0.0.1:8081       // тоже не особо важно, даже если потеряется пакет, 
		Content-Type: application/json                           // web-сервер вам разберётся, что делать
		Content-Length: %d                                       // длина тела

		{"success": "1", "error": "0"}


2. все запросы, как web-сервера, так и устройств - GET
	кто и чего хочет, шифруется в url GET-запроса("GET /door/state HTTP/1.1")
	ответы и от web-сервера и от устройств - JSON с состоянием устройства и успехом/ошибкой

	1) web-сервер опрашивает датчики GET-запросами вида:
		GET /door/state HTTP/1.1                          // получить статус двери
		HOST: 127.0.0.1:8082                              // адрес МК двери
		Connection: keep-alive
		Pragma: no-cache
		Cache-Control: no-cache
		Accept: application/json, text/javascript, */*; q=0.01
		Origin: http://127.0.0.1:8081                     // Адрес web-сервера
		<...  не особоважные детали заголовка  ...>

		<... тело пустое ...>

	ответ от МК:

		HTTP/1.1 200 OK                                          // коды ошибок - по стандарту http,
		Access-Control-Allow-Origin: http://127.0.0.1:8081       // тоже не особо важно, даже если потеряется пакет, 
		Content-Type: application/json                           // web-сервер вам разберётся, что делать
		Content-Length: %d                                       // длина тела

		{"success": "1", "state": {"id" : "1", "ip": "127.0.0.1", "state": "closed"}, "error": "0"}

	2) если web-сервер хочет выполнить лействие - такой же GET запрос (по сути, в этом варианте, любой запрос - это действие)
		GET /door/open HTTP/1.1                                  // открыть дверь
		HOST: 127.0.0.1:8082                                     // адрес МК двери
		Connection: keep-alive
		Pragma: no-cache
		Cache-Control: no-cache
		Accept: application/json, text/javascript, */*; q=0.01
		Origin: http://127.0.0.1:8081                            // Адрес web-сервера
		<...  не особоважные детали заголовка  ...>

		<... тело пустое ...>

	ответ от МК:

		HTTP/1.1 200 OK                                          // коды ошибок - по стандарту http,
		Access-Control-Allow-Origin: http://127.0.0.1:8081       // тоже не особо важно, даже если потеряется пакет, 
		Content-Type: application/json                           // web-сервер вам разберётся, что делать
		Content-Length: %d                                       // длина тела

		{"success": "1", "state": {"id" : "1", "ip": "127.0.0.1", "state": "closed"}, "error": "0"}

	3) если состояние устройства поменялось - оно шлёт GET-запрос
		GET /button/pushed HTTP/1.1                                  // кнопка нажата
			HOST: 127.0.0.1:8081                                     // адрес web-сервера
			Connection: keep-alive
			Pragma: no-cache
			Cache-Control: no-cache
			Accept: application/json, text/javascript, */*; q=0.01
			Origin: http://127.0.0.1:8082                            // адрес МК кнопки
			<...  не особоважные детали заголовка  ...>

			<... тело пустое ...>

		ответ от web-сервера:

			HTTP/1.1 200 OK                                          
			Access-Control-Allow-Origin: http://127.0.0.1:8082       
			Content-Type: application/json                           
			Content-Length: %d  
			<...  не особоважные детали заголовка  ...>                                     

			{"success": "1",  "error": "0"}















